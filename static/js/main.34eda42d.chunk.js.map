{"version":3,"sources":["components/Logo/brain.png","components/Navigation/navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","name","React","Component","Register","onNameChange","app","Clarifai","App","apiKey","particles","number","density","enable","value_area","initialState","input","route","joined","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayfaceBox","models","predict","FACE_DETECT_MODEL","catch","err","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.34eda42d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.a27f9a25.png\";","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({onRouteChange}) => {\r\n\treturn (\r\n\t\t<nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n\t\t\t <p onClick = { () => onRouteChange('signIn')}\r\n\t\t\t \tclassName='f3 link dim black underline pointer padding' \r\n\t\t\t >Sign Out\r\n\t\t\t </p>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'> \r\n\t\t\t<Tilt className=\"Tilt shadow-2\" options={{ max : 75 }} style={{ height: 120, width: 120 }} >\r\n\t\t \t\t<div className=\"Tilt-inner pa3 \"> \r\n\t\t \t\t\t<img src={brain} alt='logo'\r\n\t\t \t\t/>\r\n\t\t \t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'> \r\n\t\t\t<p className='f3 padding'>\r\n\t\t\t\t{`Let's do some magic! Shall we?`}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='form center pa4 br3 shadow-3'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='text' \r\n\t\t\t\t\t\t   onChange={onInputChange} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-light-red'\r\n\t\t\t\t\t\tonClick={onButtonSubmit}\r\n\t\t\t\t\t>Detect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl,box}) => {\r\n\treturn (\r\n\t\t<div className='center ma'> \r\n\t\t\t<div className= 'absolute mt2'>\r\n\t\t\t\t<img id= 'inputImage'\r\n\t\t\t\t\t src ={imageUrl} \r\n\t\t\t\t\t alt='' \r\n\t\t\t\t\t width='500px'\r\n\t\t\t\t\t height='auto'\r\n\t\t\t\t/>\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName='bounding-box' \r\n\t\t\t\t\tstyle={{top: box.topRow, \r\n\t\t\t\t\t\t\tright: box.rightCol,\r\n\t\t\t\t\t\t\tbottom: box.bottomRow, \r\n\t\t\t\t\t\t\tleft: box.leftCol}}\r\n\t\t\t\t>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n//import '../../App.css';\r\n\r\nclass SignIn extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tonEmailChange:'',\r\n\t\t\tonPasswordChange:''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail :event.target.value})\r\n\t}\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword :event.target.value})\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('http:///localhost:3000/signIn', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders:{'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail:this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(user => {\r\n\t\t\tif(user.id){\r\n\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {onRouteChange} = this.props;\r\n\t\treturn (\r\n\t\t\t<article className =\"br3 shadow-3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 center pa2\"> \r\n\t\t\t\t<main className =\"pa4 black-80 \">\r\n\t\t\t\t  <div className =\"measure \">\r\n\t\t\t\t    <fieldset id=\"sign_up\" \r\n\t\t\t\t    \t\t  className =\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className =\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t      <div className =\"mt3\">\r\n\t\t\t\t        <label \r\n\t\t\t\t        \tclassName =\"db fw6 lh-copy f6\" \r\n\t\t\t\t        \thtmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input className =\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t           type=\"email\" \r\n\t\t\t\t\t           name=\"email-address\"  \r\n\t\t\t\t\t           id=\"email-address\"\r\n\t\t\t\t\t           onChange={this.onEmailChange}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className =\"mv3\">\r\n\t\t\t\t        <label className =\"db fw6 lh-copy f6\" \r\n\t\t\t\t        \t   htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t    \t\t   className =\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t           type=\"password\" \r\n\t\t\t\t\t           name=\"password\"  \r\n\t\t\t\t\t           id=\"password\" \r\n\t\t\t\t\t           onChange={this.onPasswordChange}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className =\"\">\r\n\t\t\t\t       <input onClick = { this.onSubmitSignIn }\r\n\t\t\t\t       \t\t  className =\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t       \t\t  type=\"submit\" \r\n\t\t\t\t       \t\t  value=\"Sign in\" \r\n\t\t\t\t       \t/>\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className =\"lh-copy mt3\">\r\n\t\t\t\t      <p onClick = { () => onRouteChange('register')}\r\n\t\t\t\t      \t className =\"f6 link dim black db pointer\">Register\r\n\t\t\t\t      </p>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n//import '../../App.css';\r\n\r\nclass Register  extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail:'',\r\n\t\t\tpassword:'',\r\n\t\t\tname:''\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name :event.target.value})\r\n\t}\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email :event.target.value})\r\n\t}\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password :event.target.value})\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('http:///localhost:3000/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders:{'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail:this.state.email,\r\n\t\t\t\tpassword: this.state.password,\r\n\t\t\t\tname: this.state.name\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(user => {\r\n\t\t\tif(user.id){\r\n\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<article className =\"br3 shadow-3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 center pa2\"> \r\n\t\t\t\t<main className =\"pa4 black-80 \">\r\n\t\t\t\t  <div className =\"measure \">\r\n\t\t\t\t    <fieldset id=\"sign_up\" \r\n\t\t\t\t    \t\t  className =\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className =\"f2 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t      <div className =\"mt3\">\r\n\t\t\t\t        <label className =\"db fw6 lh-copy f6\" \r\n\t\t\t\t       \t\t   htmlFor=\"name\">Name</label>\r\n\t\t\t\t        <input className =\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t           type=\"name\" \r\n\t\t\t\t\t           name=\"name\"  \r\n\t\t\t\t\t           id=\"name\"\r\n\t\t\t\t\t           onChange={this.onNameChange}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className =\"mt3\">\r\n\t\t\t\t        <label className =\"db fw6 lh-copy f6\" \r\n\t\t\t\t        \t   htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input className =\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t           type=\"email\" \r\n\t\t\t\t\t           name=\"email-address\"  \r\n\t\t\t\t\t           id=\"email-address\"\r\n\t\t\t\t\t           onChange={this.onEmailChange}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className =\"mv3\">\r\n\t\t\t\t        <label className =\"db fw6 lh-copy f6\" \r\n\t\t\t\t        \t   htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t    \t\t   className =\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t           type=\"password\" \r\n\t\t\t\t\t           name=\"password\"  \r\n\t\t\t\t\t           id=\"password\" \r\n\t\t\t\t\t           onChange={this.onPasswordChange}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className =\"\">\r\n\t\t\t\t       <input onClick = { this.onSubmitSignIn }\r\n\t\t\t\t       \t\t  className =\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t       \t\t  type=\"submit\" \r\n\t\t\t\t       \t\t  value=\"Register\" \r\n\t\t\t\t       \t/>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;","import React, {Component} from 'react';\r\nimport Navigation from './components/Navigation/navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport './App.css';\r\nimport 'tachyons';\r\n\r\nconst app = new Clarifai.App({\r\n apiKey: '8fb32017da154d1ab5c4fd7bbb192ff0'\r\n});\r\n\r\n\r\nconst particles= {\r\n  particles: {\r\n    number:{\r\n      value:150,\r\n      density:{\r\n        enable:true, \r\n        value_area:800\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  input:'',\r\n  imageUrl:'',\r\n  box:{},\r\n  route:'signIn',\r\n  user:{\r\n    id:'',\r\n    name:'',\r\n    email:'',\r\n    joined:''\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(){\r\n    super()\r\n    this.state = initialState;\r\n  }\r\n\r\n  // componentDidMount(){\r\n  //   fetch('http://localhost:3000')\r\n  //   .then(response => response.json())\r\n  //   .then (console.log)\r\n  // }\r\n\r\nloadUser =(data) => {\r\n  this.setState({user: {\r\n        id:data.id,\r\n        name:data.name,\r\n        email:data.email,\r\n        joined:data.joined \r\n      }\r\n\r\n  })\r\n}\r\n\r\ncalculateFaceLocation =(data) =>{\r\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n  const image = document.getElementById('inputImage');\r\n  const width = Number(image.width);\r\n  const height = Number(image.height);\r\n  return {\r\n    leftCol: clarifaiFace.left_col * width,\r\n    topRow: clarifaiFace.top_row * height,\r\n    rightCol: width - (clarifaiFace.right_col * width),\r\n    bottomRow: height - (clarifaiFace.bottom_row * height)\r\n  }\r\n  //console.log (width,height);\r\n}\r\n\r\ndisplayfaceBox = (box) => {\r\n  //console.log(box);\r\n  this.setState({box:box});\r\n}\r\n\r\nonInputChange = (event) => {\r\n  this.setState({input: event.target.value});\r\n}\r\n\r\nonButtonSubmit = () => {\r\n  this.setState({imageUrl: this.state.input});\r\n  app.models\r\n    .predict( \r\n      Clarifai.FACE_DETECT_MODEL, \r\n      this.state.input)\r\n    .then(response => this.displayfaceBox(\r\n      this.calculateFaceLocation(response)))\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nonRouteChange = (route) => {\r\n  this.setState({route : route});\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n         <Particles className='particles' \r\n            params={particles}\r\n          />\r\n       { this.state.route === 'home'\r\n       ? <div>\r\n           <Navigation onRouteChange = {this.onRouteChange}/>\r\n           <Logo />\r\n           <ImageLinkForm \r\n            onInputChange= {this.onInputChange} \r\n            onButtonSubmit={this.onButtonSubmit}\r\n           />\r\n      \r\n          <FaceRecognition \r\n            box={this.state.box}\r\n            imageUrl={this.state.imageUrl}\r\n          />\r\n         </div> \r\n          :(  this.state.route === 'signIn'\r\n             ? <SignIn loadUser = {this.loadUser} \r\n                       onRouteChange = {this.onRouteChange} />\r\n             : <Register loadUser = {this.loadUser} \r\n                         onRouteChange = {this.onRouteChange} \r\n               />\r\n           )\r\n         \r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}